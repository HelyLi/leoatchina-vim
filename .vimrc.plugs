" This is leoatchina's vim config forked from https://github.com/spf13/spf13-vim
" Sincerely thank him for his great job, and I have made some change according to own requires.
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
" You can find spf13's origin config  at http://spf13.com
"
" plug install path
if has('nvim')
    let $PLUG_PATH = '~/.nvim/plug'
else
    if has("gui_running")
        let $PLUG_PATH = '~/.gvim/plug'
    else
        let $PLUG_PATH = '~/.vim/plug'
    endif
endif
set rtp+=$PLUG_PATH
" enhanced browser tools
let g:completable = 0
let g:use_ultisnips = 0
" python support
if has('python3') && executable('python3')
    let g:python_version = 3
elseif has('python') && executable('python')
    let g:python_version = 2
else
    let g:python_version = 0
endif
" vim_advance judge
if has('nvim') || v:version > 799
    let g:vim_advance = 2
elseif v:version > 703
    let g:vim_advance = 1
else
    let g:vim_advance = 0
endif

" plugins
call plug#begin($PLUG_PATH)
if WINDOWS()
    Plug 'leoatchina/vim-windows-tools', {'dir':'$HOME\.vim-windows-tools'}
    let $PATH.=";".$HOME."\\.vim-windows-tools"
endif
if (has('nvim') && WINDOWS()) || (has('gui_running') && !WINDOWS())
    Plug 'lambdalisue/vim-fullscreen'
endif
Plug 'mhinz/vim-startify'
Plug 'google/vim-searchindex'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-commentary'
Plug 'sheerun/vim-polyglot'
Plug 'mbbill/undotree'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'leoatchina/vim-colorschemes-collections'
if g:python_version > 0
    Plug 'vim-voom/VOoM'
endif
if executable('git')
    Plug 'tpope/vim-fugitive'
    Plug 'Xuyuanp/nerdtree-git-plugin'
endif
if executable('ctags')
    Plug 'majutsushi/tagbar'
endif
" In your .vimrc.local file
" list only the plugin groups you will use
if !exists('g:spf13_plug_groups')
    let g:spf13_plug_groups=['smartcomplete', 'php', 'javascript', 'html']
endif
" input method
if count(g:spf13_plug_groups, 'pinyin') || count(g:spf13_plug_groups, 'wubi')
    Plug 'leoatchina/ywvim'
endif
" biosyntax
if count(g:spf13_plug_groups, 'bio')
    Plug 'bioSyntax/bioSyntax-vim'
endif
" external search method
if g:vim_advance == 2
    Plug 'wsdjeg/FlyGrep.vim'
    nmap <C-f>f :FlyGrep<Cr>
endif
if executable('ag') || executable('ack') || executable('rg') || executable('pt')
    Plug 'dyng/ctrlsf.vim'
else
    if v:version >799 && !WINDOWS() && executable('ctags')
        Plug 'damage220/vim-finder'
        nmap <C-f>s :finder<Tab>
    else
        nnoremap <C-f>s :vimgrep<Space>
    endif
endif
Plug 'brooth/far.vim'
Plug 'terryma/vim-multiple-cursors'
" signs
Plug 'rhysd/conflict-marker.vim'
Plug 'jiangmiao/auto-pairs'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'mhinz/vim-signify'
Plug 'tamlok/vim-markdown'
Plug 'junegunn/vim-easy-align'
" statusline
Plug 'bling/vim-bufferline'
if count(g:spf13_plug_groups, 'airline')
    Plug 'vim-airline/vim-airline'
elseif count(g:spf13_plug_groups, 'lightline') && has('statusline')
    Plug 'itchyny/lightline.vim'
    Plug 'leoatchina/lightline-powerful'
    if g:vim_advance == 2
        Plug 'maximbaz/lightline-ale'
    endif
endif
" shell
if count(g:spf13_plug_groups, 'shell') && !WINDOWS()
    Plug 'shougo/vimproc.vim', {'do':'make'}
    Plug 'shougo/vimshell.vim'
endif
" PHP
if count(g:spf13_plug_groups, 'php')
    Plug 'arnaud-lb/vim-php-namespace'
endif
" Python
if count(g:spf13_plug_groups, 'python')
    if g:python_version == 3
        Plug 'python-mode/python-mode',{ 'branch': 'develop' }
    elseif g:python_version == 2
        Plug 'python-mode/python-mode',{ 'branch': 'master' }
    endif
endif
" Perl
if count(g:spf13_plug_groups, 'perl')
    Plug 'vim-perl/vim-perl'
endif
" Javascript
if count(g:spf13_plug_groups, 'javascript')
    Plug 'elzr/vim-json'
    Plug 'pangloss/vim-javascript'
    Plug 'heavenshell/vim-jsdoc'
endif
" Go
if count(g:spf13_plug_groups, 'go')
    Plug 'fatih/vim-go',{'do':':GoUpdateBinaries'}
    Plug 'garyburd/go-explorer'
    if has('nvim')
        Plug 'jodosha/vim-godebug'
    endif
endif
" HTML
if count(g:spf13_plug_groups, 'html')
    Plug 'hail2u/vim-css3-syntax'
    Plug 'gorodinskiy/vim-coloresque'
    Plug 'tpope/vim-haml'
    Plug 'mattn/emmet-vim'
endif
" browser tools
let g:ctrlp_version = 1
if count(g:spf13_plug_groups, 'fzf')
    if !WINDOWS()
        let g:ctrlp_version = 4
    endif
elseif count(g:spf13_plug_groups, 'denite')
    if g:python_version == 3 && g:vim_advance == 2
        let g:ctrlp_version = 3
    endif
elseif count(g:spf13_plug_groups, 'leaderF')
    if g:python_version && executable('gcc') && g:vim_advance
        let g:ctrlp_version = 2
    endif
endif
"
if g:ctrlp_version == 4
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
    Plug 'junegunn/fzf.vim'
elseif g:ctrlp_version == 3
    Plug 'shougo/denite.nvim'
elseif g:ctrlp_version == 2
    if WINDOWS()
        Plug 'Yggdroot/LeaderF', { 'do': '.\install.bat' }
    else
        Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }
    endif
else
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'tacahiroy/ctrlp-funky'
endif
" complete
if g:vim_advance
    " vim version
    if g:vim_advance == 2
        if count(g:spf13_plug_groups, 'syntax')
            Plug 'w0rp/ale'
        endif
        Plug 'skywind3000/asyncrun.vim'
        if executable('ctags')
            Plug 'ludovicchabant/vim-gutentags'
        endif
    else
        " install run and syntax tools
        if count(g:spf13_plug_groups, 'syntax')
            Plug 'vim-syntastic/syntastic'
        endif
        Plug 'thinca/vim-quickrun'
    endif
    " YCM or asyncomplete
    if count(g:spf13_plug_groups, 'youcompleteme') || count(g:spf13_plug_groups, 'YCM')
        if executable('cmake') && g:python_version
            let g:completable = 1
        else
            let g:completable = 6
            echoe "Cannot install YCM, install neocomplcache instead."
        endif
    elseif count(g:spf13_plug_groups, 'nvim-completion-manager') || count(g:spf13_plug_groups, 'NCM')
        if g:python_version == 3 && g:vim_advance == 2
            let g:completable = 2
        else
            let g:completable = 6
            echoe "Cannot install NCM, install neocomplcache instead."
        endif

    endif
    " smartcomplete
    if g:completable == 0
        if count(g:spf13_plug_groups, 'deoplete')
            if g:python_version == 3 && g:vim_advance == 2
                let g:completable = 3
            else
                echoe "Cannot install deoplete, install neocomplcache instead."
                let g:completable = 6
            endif
        elseif count(g:spf13_plug_groups, 'completor')
            if g:python_version && !has('nvim') && version > 799
                let g:completable = 4
            else
                echoe "Cannot install completor, install neocomplcache instead."
                let g:completable = 6
            endif
        elseif count(g:spf13_plug_groups, 'neocomplete')
            if has('lua')
                let g:completable = 5
            else
                echoe "Cannot install neocomplete, install neocomplcache instead."
                let g:completable = 6
            endif
        elseif count(g:spf13_plug_groups, 'neocomplcache')
            let g:completable = 6
        " smart select a complete plugin
        elseif count(g:spf13_plug_groups, 'smartcomplete')
            "deoplete
            if g:python_version == 3 && has('nvim')
                let g:completable = 3
            "completor
            elseif g:python_version  && !has('nvim') && version > 799
                let g:completable = 4
            "neocomplete
            elseif has('lua')
                let g:completable = 5
            "neocomplcache
            else
                let g:completable = 6
            endif
        endif
    endif
    " install snippets plugins
    if g:completable > 0
        if count(g:spf13_plug_groups,'ultisnips')
            if g:python_version
                let g:use_ultisnips = 1
                Plug 'SirVer/ultisnips'
                Plug 'honza/vim-snippets'
                Plug 'leoatchina/leoatchina-snippets'
            else
                let g:use_ultisnips = 0
                Plug 'Shougo/neosnippet'
                Plug 'Shougo/neosnippet-snippets'
            endif
        elseif count(g:spf13_plug_groups,'neosnippet')
            let g:use_ultisnips = 0
            Plug 'Shougo/neosnippet'
            Plug 'Shougo/neosnippet-snippets'
        " neovim need pip install neovim
        elseif g:python_version
            let g:use_ultisnips = 1
            Plug 'SirVer/ultisnips'
            Plug 'honza/vim-snippets'
            Plug 'leoatchina/leoatchina-snippets'
        else
            let g:use_ultisnips = 0
            Plug 'Shougo/neosnippet'
            Plug 'Shougo/neosnippet-snippets'
        endif
    endif
    " install complete plugins
    if g:completable == 1
        if g:python_version == 2
            Plug 'Valloric/YouCompleteMe',{ 'do' : 'python2 ./install.py --clang-completer' }
        elseif g:python_version == 3
            Plug 'Valloric/YouCompleteMe',{ 'do' : 'python3 ./install.py --clang-completer' }
        endif
    elseif g:completable == 2
        Plug 'roxma/nvim-completion-manager'
        if !has('nvim')
            Plug 'roxma/vim-hug-neovim-rpc'
        endif
    elseif g:completable == 3
        Plug 'Shougo/deoplete.nvim',  { 'do': ':UpdateRemotePlugins'}
        Plug 'zchee/deoplete-clang'
        if !has('nvim')
            Plug 'roxma/vim-hug-neovim-rpc'
            Plug 'roxma/nvim-yarp'
        endif
        if count(g:spf13_plug_groups, 'python')
            Plug 'zchee/deoplete-jedi'
        endif
        if count(g:spf13_plug_groups, 'go')
            Plug 'zchee/deoplete-go'
        endif
        if count(g:spf13_plug_groups, 'javascript')
            Plug 'carlitux/deoplete-ternjs'
        endif
    elseif g:completable == 4
        Plug 'maralla/completor.vim'
        if !g:use_ultisnips
            Plug 'maralla/completor-neosnippet'
        endif
    elseif g:completable == 5
        Plug 'Shougo/neocomplete.vim'
    elseif g:completable == 6
        Plug 'Shougo/neocomplcache.vim'
        if g:use_ultisnips == 1
            Plug 'JazzCore/neocomplcache-ultisnips'
        endif
    endif
else
    echoe "In order to have grammar check and snippets completion, you should update to vim7.3+ or neovim!!"
endif
call plug#end()
